# GraphQL schema

# Authentication Schema
type User {
    id: Int!
    username: String!
    email: String!
    firstName: String!
    lastName: String!
    avatar: String!
    birthday: Int!
    bio: String!
    facebook: String!
    instagram: String!
    twitter: String!
    isAdmin: Boolean!
    createdAt: Int!
    updatedAt: Int!
}

type AuthResponse {
    message: String!
    user: User!
}

input EditedUser {
    username: String!
    firstName: String!
    lastName: String!
    avatar: String!
    birthday: Int!
    bio: String!
    facebook: String!
    instagram: String!
    twitter: String!
}

type Token {
    token: String!
    expireAt: Int!
}

type Query {
    users: [User!]!
}

type getUserByIdResponse {
    message: String!
    user: User!
}

type getAllUsersResponse {
    message: String!
    users: [User!]!
}

type EditUserResponse {
    message: String!
    user: User!
}

type DeleteUserResponse {
    message: String!
}

type Mutation {
    register(email: String!, password: String!): AuthResponse!
    login(email: String!, password: String!): AuthResponse!
    getUserById(requestorId: Int!, userId: Int!): getUserByIdResponse!
    getAllUsers(adminId: Int!): getAllUsersResponse!
    EditUser(userId: Int!, editedUser: EditedUser!): EditUserResponse!
    DeleteUser(adminId: Int!, userId: Int!): DeleteUserResponse!
}